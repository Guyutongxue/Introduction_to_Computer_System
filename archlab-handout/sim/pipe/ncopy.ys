# PKU ICS ArchLab Handin (Part C)
#
# @file ncopy.ys
# @author Guyutongxue <1900012983@pku.edu.cn>
# 
# This file is distributed under WTFPL <https://www.wtfpl.net> WITHOUT ANY WARRANTY.

# CHANGE TO THIS FILE
# ===================
# - Use instruction `iaddq`.
# - Do the loop unrolling. (9 elements for 1 loop)

#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# no one cares about callee-save things
	# pushq %rbx
	# pushq %rbp
	# pushq %r12
	# pushq %r13

	# use the default 0 value
	# xorq %rax,%rax
	jmp test

loop:
	mrmovq $0x40(%rdi), %r13
	mrmovq $0x38(%rdi), %rcx
	mrmovq $0x30(%rdi), %r8
	mrmovq $0x28(%rdi), %r9
	mrmovq $0x20(%rdi), %r10
	mrmovq $0x18(%rdi), %r11
	mrmovq $0x10(%rdi), %rbx
	mrmovq $0x08(%rdi), %rbp
	mrmovq $0x00(%rdi), %r12
	rmmovq %r13, $0x40(%rsi)
	andq %r13, %r13
	jle npos0_1
	iaddq $1, %rax
npos0_1:
	rmmovq %rcx, $0x38(%rsi)
	andq %rcx, %rcx
	jle npos0
	iaddq $1, %rax
npos0:
	rmmovq %r8 , $0x30(%rsi)
	andq %r8, %r8
	jle npos1
	iaddq $1, %rax
npos1:
	rmmovq %r9 , $0x28(%rsi)
	andq %r9, %r9
	jle npos2
	iaddq $1, %rax
npos2:
	rmmovq %r10, $0x20(%rsi)
	andq %r10, %r10
	jle npos3
	iaddq $1, %rax
npos3:
	rmmovq %r11, $0x18(%rsi)
	andq %r11, %r11
	jle npos4
	iaddq $1, %rax
npos4:
	rmmovq %rbx, $0x10(%rsi)
	andq %rbx, %rbx
	jle npos5
	iaddq $1, %rax
npos5:
	rmmovq %rbp, $0x08(%rsi)
	andq %rbp, %rbp
	jle npos6
	iaddq $1, %rax
npos6:
	rmmovq %r12, $0x00(%rsi)
	andq %r12, %r12
	jle npos7
	iaddq $1, %rax
npos7:
	iaddq $72, %rdi
	iaddq $72, %rsi
test:
	andq %rdx, %rdx
	jle almost_done
	iaddq $-9, %rdx
	jge loop
	iaddq $4, %rdx
	jge J4567
J0123:
	iaddq $2, %rdx
	jge J23
J01:
	iaddq $1, %rdx
	mrmovq $0x00(%rdi), %r12
	jl npos6
	mrmovq $0x08(%rdi), %rbp
	jmp npos5
J23:
	mrmovq $0x00(%rdi), %r12
	mrmovq $0x08(%rdi), %rbp
	mrmovq $0x10(%rdi), %rbx
	je npos4
	mrmovq $0x18(%rdi), %r11
	iaddq $-1, %rdx
	jmp npos3
J4567:
	mrmovq $0x00(%rdi), %r12
	mrmovq $0x08(%rdi), %rbp
	mrmovq $0x10(%rdi), %rbx
	mrmovq $0x18(%rdi), %r11
	iaddq $-2, %rdx
	jge J67
J45:
	iaddq $1, %rdx
	mrmovq $0x20(%rdi), %r10
	jl npos2
	mrmovq $0x28(%rdi), %r9
	jmp npos1
J67:
	mrmovq $0x20(%rdi), %r10
	mrmovq $0x28(%rdi), %r9
	mrmovq $0x30(%rdi), %r8
	je npos0
	mrmovq $0x38(%rdi), %rcx
	iaddq $-1, %rdx
	jmp npos0_1
almost_done:
	# popq %r13
	# popq %r12
	# popq %rbp
	# popq %rbx
	ret

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
